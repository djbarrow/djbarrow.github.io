%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox: 30 31 582 761%%Title: (Aria.ai)%%Creator: (Adobe Illustrator\250 7.0: LaserWriter 8 8.6.5)%%CreationDate: (4:28 pm Thursday, August 12, 1999)%%For: (Kristian Walsh)%%Pages: 1%%DocumentFonts:%%DocumentNeededFonts:%%DocumentSuppliedFonts:%%DocumentData: Clean7Bit%%PageOrder: Ascend%%Orientation: Portrait%%DocumentMedia: Default 612 792 0 () ()%RBINumCopies: 1%RBINupNess: 1 1%ADO_ImageableArea: 30 31 582 761%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaultsuserdict/dscInfo 5 dict dup begin/Title(Aria.ai)def/Creator(Adobe Illustrator\250 7.0: LaserWriter 8 8.6.5)def/CreationDate(4:28 pm Thursday, August 12, 1999)def/For(Kristian Walsh)def/Pages 1 defend put%%BeginProlog/md 151 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if%%BeginFile: lw8_feature-1.01%%Copyright: Copyright 1990-1998 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved./bd{bind def}bind def/ld{load def}bd/xs{exch store}bd/Z{0 def}bd/T true def/F false def/level2/languagelevel where{pop languagelevel 2 ge}{F}ifelsedef/odictstk Z/oopstk Z/fcl{count oopstk sub dup 0 gt{{pop}repeat}{pop}ifelsecountdictstack odictstk sub dup 0 gt{{end}repeat}{pop}ifelse}bd/sfcl2{/odictstk countdictstack storecount/oopstk xs}bd/efcl2{stopped{$error/newerror F put}iffcl}bd/noload Z/startnoload{{/noload save store}if}bd/endnoload{{noload restore}if}bd/setcopies{level2{1 dict begin/NumCopies exch def currentdict end setpagedevice}{userdict/#copies 3 -1 roll put}ifelse}deflevel2 startnoload/ststpgdev{}def/dopgdev{}def/stpgdev{}def/buf Z/didstop T def/sfcl{/didstop T store/odictstk countdictstack storecount/oopstk xscurrentfile cvx stopped{$error/newerror F putdidstop{save/didstop xs/buf vmstatus exch sub exch pop dup 0 lt{pop 0}ifdup 64000 gt{pop 64000}if string store{currentfile buf readline{(}efcl)eq{exit}if}{/UnexpectedEOF errordict/rangecheck get exec}ifelse}loopdidstop restore}if}iffcl}bd/efcl{/didstop F storeexecstop}bdlevel2 endnoload level2 not startnoload/setpagedevice where{pop/realstpgdev/setpagedevice ld}if/SC_topddict Z/SC_spdict Z/$spusrdict F def/dopgdev{userdict/setpagedevice undef$spusrdict{userdict/setpagedevice/realstpgdev load put/$spusrdict F store}ifSC_topddict realstpgdev}bd/stpgdev{SC_topddict dup 3 -1 roll{SC_spdict 2 index known{SC_spdict 2 index getdup 3 -1 roll{put dup}forallpop put dup}{put dup}ifelse}forallpop pop}bd/ststpgdev{/setpagedevice where{userdict eq{/$spusrdict T store}if}ifuserdict/setpagedevice/stpgdev load put/SC_topddict 0 dict store/SC_spdict 3 dict begin/InputAttributes 0 dict def/Policies 0 dict def/OutputAttributes 0 dict defcurrentdictendstore}def/sfcl/sfcl2 ld/efcl/efcl2 ldlevel2 not endnoload%%EndFile%%BeginFile: lw8_basic-3.0/xdf{exch def}bd/:L/lineto/lw/setlinewidth/:M/moveto/rl/rlineto/rm/rmoveto/:C/curveto/:T/translate/:K/closepath/:mf/makefont/gS/gsave/gR/grestore/np/newpath12{ld}repeat/framewidth -1 def/QDframwid -1 def/numframes Z/mTS matrix def/$m matrix def/av 86 def/por T def/normland F def/psb-nosave{}def/pse-nosave{}def/us Z/psb{/us save store}bd/pse{us restore}bd/level3/languagelevel where{pop languagelevel 3 ge}{F}ifelsedeflevel2 startnoload/setjob{statusdict/jobname 3 -1 roll put}bd/devg/DeviceGray def/devr/DeviceRGB def/devc/DeviceCMYK deflevel2 endnoload level2 not startnoload/setjob{1 dict begin/JobName xdf currentdict end setuserparams}bd/devg[/DeviceGray]def/devr[/DeviceRGB]def/devc[/DeviceCMYK]deflevel2 not endnoload/pm Z/mT Z/sD Z/initializepage{mT $m currentmatrix mTS concatmatrix pop/pm save store mT concat}bd/endp{pm restore}bd/adjRect{dup 2 mul 6 2 roll4 index sub exch 5 -1 roll sub exch4 2 roll4 index add exch 5 -1 roll add exch4 2 roll}bd/frame1up{gSmTS setmatrixQDframwid lw/setstrokeadjust where{pop T setstrokeadjust}ifclippath pathbbox2 index sub exch3 index sub exchcurrentlinewidth framewidth muladjRectnumframes dup 0 lt{pop 0}if{4 copyrScurrentlinewidth framewidthmul 4 muladjRect}repeatpop pop pop popgR}bd/$c devr def/rectclip where{pop/rC/rectclip ld}{/rC{np 4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:Kclip np}bd}ifelse/rectfill where{pop/rF/rectfill ld}{/rF{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rlfillgR}bd}ifelse/rectstroke where{pop/rS/rectstroke ld}{/rS{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:KstrokegR}bd}ifelse%%EndFilelevel3 startnoload%%BeginFile: lw8_safeclipL12-1.0					/rectclip where{pop/rCa/rectclip ld}{/rCa{np 01 index length 4 idiv{2 copy4 getintervalaload pop4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:K4 add}repeatclip nppop pop}bd}ifelse/savedstack Z/subsavedstack Z/execstring Z/saferCa{/execstring xs/odictstk countdictstack store/oopstk 0 storecount 0 ne{savedstack 0 eq{count 100 gt{count}{100}ifelsearray/savedstack xs}{count savedstack length gt{count array/savedstack xs}if}ifelsecount savedstack 0 3 -1 rollgetintervalastore/subsavedstack xs}{/subsavedstack 0 store}ifelseexecstring cvx stopped{$error/newerror F putnewpath}iffclsubsavedstack 0 ne{subsavedstack aload pop}if}bd%%EndFilelevel3 endnoload level3 not startnoload%%BeginFile: lw8_safeclipL3-1.0	/saferCa/pop ld%%EndFilelevel3 not endnoload%%BeginFile: lw8_level1_colorspace-2.0/G/setgray ld/:F1/setgray ld/:F/setrgbcolor ld/:F4/setcmykcolor where{pop/setcmykcolor ld}{{3{dup3 -1 roll adddup 1 gt{pop 1}if1 exch sub4 1 roll}repeatpopsetrgbcolor}bd}ifelse/:Fx{counttomark{0{G}0{:F}{:F4}}exch getexecpop}bd/$cs Z/:rg{devr :ss}bd/:sc{$cs :ss}bd/:dc{dup type/arraytype eq{0 get}ifdup/DeviceCMYK eq{pop devc}{/DeviceGray eq{devg}{devr}ifelse}ifelse/$cs xdf}bd/:sgl{}def/:dr{}bd/:fCRD{pop}bd/:ckcs{}bd/:ss{/$c xdf}bd%%EndFile%%BeginFile: lw8_bubn-2.1/$t Z/$p Z/$s Z/$o 1. def/2state? F def/ps Zlevel2 startnoload/pushcolor/currentrgbcolor ld/popcolor/setrgbcolor ld/setcmykcolor where{pop/currentcmykcolor where{pop/pushcolor/currentcmykcolor ld/popcolor/setcmykcolor ld}if}iflevel2 endnoload level2 not startnoload/pushcolor{currentcolorspace $c eq{currentcolor currentcolorspace T}{currentcmykcolor F}ifelse}bd/popcolor{{setcolorspace setcolor}{setcmykcolor}ifelse}bdlevel2 not endnoload/pushstatic{2state?$o$t$p$s$csps}bd/popstatic{/ps xs/$cs xs/$s xs/$p xs/$t xs/$o xs/2state? xs}bd/pushgstate{currentpointpushcolorcurrentlinewidthcurrentlinecapcurrentlinejoincurrentdash exch aload lengthnp clippath pathbbox$m currentmatrix aload pop}bd/popgstate{$m astore setmatrix2 index sub exch3 index sub exchrCarray astore exch setdashsetlinejoinsetlinecaplwpopcolornp :M}bd/bu{errordict/nocurrentpoint{pop 0 0}put2state?{pushgstategR}ifpushgstategRpushgstatepushstaticpm restoremTS setmatrix}bd/bn{/pm save storepopstaticpopgstategSpopgstate2state?{gSpopgstate}if}bd/cpat{pop 64 div setgray 8{pop}repeat}bd%%EndFile/currentpacking where {pop sc_oldpacking setpacking}if end%%EndProlog%%BeginSetupmd begin/mT[1 0 0 -1 30 761]def/sD 16 dict def{/Courier findfont[10 0 0 -10 0 0]:mf setfont}stopped{$error/newerror F put}if%%EndSetup%%Page: 1 1%%BeginPageSetupinitializepage%%EndPageSetupgS 0 0 552 730 rC1 G-1 -1 1 1 rF0 0 :Mpsb%%BeginDocument: Adobe Illustrator¨ 7.0%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 7.0%%For: (Bob Roberts) (Bob Inc.)%%CreationDate: (8/12/99) (4:28 PM)%%BoundingBox: 47 249 578 539%%HiResBoundingBox: 47.2398 249.8643 577.0198 539%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentFonts: Swiss721BT-Light%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_typography_AI5 1.0 1%%+ procset Adobe_ColorImage_AI6 1.1 0%%+ procset Adobe_Illustrator_AI5 1.2 0%%+ procset Adobe_cshow 2.0 8%AI5_FileFormat 3%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%DocumentCustomColors: (Comet Orange)%%CMYKCustomColor: 1 0 0.55 0 (Aqua)%%+ 0 0 0 1 (Black)%%+ 1 0.5 0 0 (Blue)%%+ 0.5 0.4 0.3 0 (Blue Gray)%%+ 0.8 0.05 0 0 (Blue Sky)%%+ 0.5 0.85 1 0 (Brown)%%+ 0 0.45 1 0 (Comet Orange)%%+ 0.35 0.45 0.15 0 (Comet/Lettering Lilac)%%+ 1 0.9 0.1 0 (Dark Blue)%%+ 1 0.55 1 0 (Forest Green)%%+ 0.05 0.2 0.95 0 (Gold)%%+ 0.75 0.05 1 0 (Grass Green)%%+ 0.15 1 1 0 (Red)%%+ 0.45 0.9 0 0 (Violet)%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 38 -182 590 548%AI3_DocumentPreview: Header%AI5_ArtSize: 595.2756 366%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 1 0%AI5_TargetResolution: 800%AI5_NumLayers: 5%AI5_OpenToView: -462 828 -2 787 491 18 0 1 108 72 0 0%AI5_OpenViewLayers: 77776%%PageOrigin:38 -182%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -31 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%%EndComments%%BeginProlog%%BeginResource: procset Adobe_ErrorHandler_AI7 1.0 0%%Title: (Adobe Illustrator (R) Version 7.0 Error Handler)%%Version: 1.0 0%%CreationDate: (9/30/1996) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)/$brkpage 64 dict def $brkpage begin/prnt {	dup type /stringtype ne { =string cvs } if	dup length 6 mul	/tx exch def	/ty 10 def	currentpoint /toy exch def	/tox exch def	1 setgray newpath	tox toy 2 sub moveto	0 ty rlineto tx 0 rlineto	0 ty neg rlineto	closepath fill	tox toy moveto 0 setgray show} bind def/nl {	currentpoint exch pop lmargin exch moveto	0 -10 rmoveto} def/== { /cp 0 def typeprint nl } def/typeprint {	dup type currentdict exch known { exec } {		unknowntype	} ifelse} readonly def/lmargin 72 def/rmargin 72 def/tprint {	dup length cp add rmargin gt { nl /cp 0 def } if	dup length cp add /cp exch def	prnt} readonly def/cvsprint { =string cvs tprint () tprint } readonly def/unknowntype {	exch pop cvlit (??) tprint cvsprint} readonly def/integertype { cvsprint } readonly def/realtype { cvsprint } readonly def/booleantype { cvsprint } readonly def/operatortype { (//) tprint cvsprint } readonly def/marktype { pop (-mark-) tprint } readonly def/dicttype { pop (-dictionary-) tprint } readonly def/nulltype { pop (-null-) tprint } readonly def/filetype { pop (-filestream-) tprint } readonly def/savetype { pop (-savelevel-) tprint } readonly def/fonttype { pop (-fontid-) tprint } readonly def/nametype {	dup xcheck not { (/) tprint } if cvsprint} readonly def/stringtype {	dup rcheck {		(\() tprint tprint (\) ) tprint	} {		pop (-string-) tprint	} ifelse} readonly def/arraytype {	dup rcheck {		dup xcheck {			({) tprint { typeprint } forall (}) tprint		} {			([) tprint { typeprint } forall (]) tprint		} ifelse	} {		pop (-array-) tprint	} ifelse} readonly def/packedarraytype {	dup rcheck {		dup xcheck {			({) tprint { typeprint } forall (}) tprint		} {			([) tprint { typeprint } forall (]) tprint		} ifelse	} {		pop (-packedarray-) tprint	} ifelse} readonly def/courier /Courier findfont 10 scalefont def/OLDhandleerror errordict /handleerror get defend/handleerror {	systemdict begin $error begin $brkpage begin	newerror {		/newerror false store		vmstatus pop pop 0 ne { grestoreall } if		initgraphics courier setfont		lmargin 720 moveto		(An error occurred while processing this page.) prnt nl nl		(Error: ) prnt errorname prnt nl		(Command: ) prnt /command load prnt nl		$error /ostack known {			(Stack: ) prnt nl			$error /ostack get aload length {==} repeat		} if		systemdict /showpage get exec		/newerror true store		end end end	} {		end end end	} ifelse}dup 0 systemdict putdup 4 $brkpage putbind readonlyerrordict 3 1 roll put%%EndResource%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 25 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			0			6 packedarray		} bind def		/findrgbcustomcolor		{			1			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop 			0 eq			{				pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				pop				3				{					1 exch sub					3 index mul 					1 exch sub					3 1 roll				} repeat				4 -1 roll pop				setrgbcolor			} ifelse		}		def	} if		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	level2?	{		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore		add add add 4 eq	}	{		1 0 0 0 testCMYKColorThrough		0 1 0 0 testCMYKColorThrough		0 0 1 0 testCMYKColorThrough		0 0 0 1 testCMYKColorThrough		and and and	} ifelse	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 1%%CreationDate:(6/10/1996) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 68 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/havefont{	systemdict /languagelevel known		{		/Font resourcestatus dup			{ exch pop exch pop }		if		}		{		systemdict /FontDirectory get 1 index known			{ pop true }			{			systemdict /fileposition known				{				dup length 6 add exch				Ss 6 250 getinterval				cvs pop				Ss exch 0 exch getinterval				status					{ pop pop pop pop true }					{ false }				ifelse				}				{				pop false				}			ifelse			}		ifelse		}	ifelse} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def/subststring {	exch 2 index exch search	{		exch pop		exch dup () eq		{			pop exch concatstring		}		{			3 -1 roll			exch concatstring			concatstring		} ifelse		exch pop true	}	{		pop pop false	} ifelse} def/concatstring {	1 index length 1 index length	1 index add	string	dup 0 5 index putinterval	dup 2 index 4 index putinterval	4 1 roll pop pop pop} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	2 index havefont	{		3 index		255 string		cvs				dup		(_Symbol_)		eq		{			pop			2 index			findfont					}		{			dup length 1 sub			1 exch			getinterval						cvn			findfont		} ifelse	}	{		dup 1 eq		{			2 index 64 string cvs			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring			{				exch pop dup havefont				{					findfont false				}				{					pop true				} ifelse			}			{				pop	dup				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring				{					exch pop dup havefont					{						findfont false					}					{						pop true					} ifelse				}				{					pop pop true				} ifelse			} ifelse			{				/Ryumin-Light-83pv-RKSJ-H havefont					{/Ryumin-Light-83pv-RKSJ-H}					{/Courier}					ifelse					findfont					[1 0 0.5 1 0 0] makefont			} if		}		{			/Courier findfont		} ifelse	} ifelse	_wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 10 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontScript exch def	/FontDirection exch def	/FontRequest exch def	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{W B} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{W F } def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{W S} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat	_shift aload pop _lineorientation 1 eq { exch } if translate	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	1 index type /nametype eq	{		dup 0.75 mul 1 index 0.25 mul neg	} if	/_fontDescent exch ddef	/_fontAscent exch ddef	/_fontSize exch ddef	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef	/_fontHeight _fontSize ddef	findfont _fontSize scalefont setfont} def/Tl{	pop neg 0 exch	_leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	0 exch	_shift astore pop	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	count 1 eq { 100 } if	100 div exch 100 div exch	_scale astore pop	iTm} def/TA{	pop} def/Tq{	pop} def/Tg{	pop} def/TG{	pop} def/Tv{	/_lineorientation exch ddef} def/TV{	/_charorientation exch ddef} def/Ty{	dup /_yokoorientation exch ddef 1 sub neg Tv} def/TY{	pop} def/T~{	Tx} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	_fontSize mul 1000 div	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse	rmoveto	pop} def/TK{	2 npop} def/T*{	_leading aload pop	_lineorientation 0 ne { exch } if	Td} def/T*-{	_leading aload pop	_lineorientation 0 ne { exch } if	exch neg exch neg	Td} def/T-{	_ax neg 0 rmoveto	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ findfont _fontSize scalefont setfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%/X^{	currentfont 5 1 roll	dup havefont		{		findfont _fontSize scalefont setfont		}		{		pop		exch		} ifelse	2 index 0 eq	{		Tx	}	{		Tj	} ifelse	pop	pop	setfont} def/T^	/X^	load def%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 24 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize{ 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6	{		dup type /arraytype eq		{			dup xcheck			{				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not{	/Adobe_ColorImage_AI6_Vars 15 dict def} ifAdobe_ColorImage_AI6_Vars begin	/channelcount 0 def	/sourcecount 0 def	/sourcearray 4 array def	/plateindex -1 def	/XIMask 0 def	/XIBinary 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIBuffer null def	/XIDataProc null def	/XIVersion 6 defend/WalkRGBString null def/WalkCMYKString null def/StuffRGBIntoGrayString null def/RGBToGrayImageProc null def/StuffCMYKIntoGrayString null def/CMYKToGrayImageProc null def/ColorImageCompositeEmulator null def/SeparateCMYKImageProc null def/FourEqual null def/TestPlateIndex null defcurrentdict /_colorimage known not{	/colorimage where	{		/colorimage get /_colorimage exch def	}	{		/_colorimage null def	} ifelse} if/_currenttransfer systemdict /currenttransfer get def/colorimage null def/XI null def/WalkRGBString{	0 3 index	dup length 1 sub 0 3 3 -1 roll	{		3 getinterval { } forall		5 index exec		3 index	} for		 5 { pop } repeat} def/WalkCMYKString{	0 3 index	dup length 1 sub 0 4 3 -1 roll	{		4 getinterval { } forall				6 index exec				3 index			} for		5 { pop } repeat	} def/StuffRGBIntoGrayString{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/RGBToGrayImageProc{		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		dup length 3 idiv string		dup 3 1 roll 				/StuffRGBIntoGrayString load exch		WalkRGBString end} def/StuffCMYKIntoGrayString{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/CMYKToGrayImageProc{		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		dup length 4 idiv string		dup 3 1 roll 				/StuffCMYKIntoGrayString load exch		WalkCMYKString end} def/ColorImageCompositeEmulator{	pop true eq	{		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat	}	{		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne		{			Adobe_ColorImage_AI6_Vars begin				sourcearray 0 3 -1 roll put							channelcount 3 eq 				{ 					/RGBToGrayImageProc 				}				{ 					/CMYKToGrayImageProc				} ifelse				load		 end		} if		image	} ifelse} def/SeparateCMYKImageProc{		Adobe_ColorImage_AI6_Vars begin		sourcecount 0 ne		{			sourcearray plateindex get exec		}		{						sourcearray 0 get exec						dup length 4 idiv string						0 2 index						plateindex 4 2 index length 1 sub			{				get 255 exch sub								3 copy put pop 1 add								2 index			} for			pop pop exch pop		} ifelse end} def	/FourEqual{	4 index ne	{		pop pop pop false	}	{		4 index ne		{			pop pop false		}		{			4 index ne			{				pop false			}			{				4 index eq			} ifelse		} ifelse	} ifelse} def/TestPlateIndex{	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where		{			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 FourEqual 			{ 				/plateindex 0 def			}			{				0 1 0 0 FourEqual				{ 					/plateindex 1 def				}				{					0 0 1 0 FourEqual					{						/plateindex 2 def					}					{						0 0 0 1 FourEqual						{ 							/plateindex 3 def						}						{							0 0 0 0 FourEqual							{								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/colorimage{	Adobe_ColorImage_AI6_Vars begin		/channelcount 1 index def		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def		4 sourcecount add index dup 		8 eq exch 1 eq or not end		{		/_colorimage load null ne		{			_colorimage		}		{			Adobe_ColorImage_AI6_Vars /sourcecount get			7 add { pop } repeat		} ifelse	}	{		dup 3 eq		TestPlateIndex		dup -1 eq exch 5 eq or or		{			/_colorimage load null eq			{				ColorImageCompositeEmulator			}			{				dup 1 eq				{					pop pop image				}				{					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq					{						gsave												0 _currenttransfer exec						1 _currenttransfer exec						eq						{ 0 _currenttransfer exec 0.5 lt }						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse												{ { pop 0 } } { { pop 1 } } ifelse						systemdict /settransfer get exec					} if										_colorimage										Adobe_ColorImage_AI6_Vars /plateindex get 5 eq					{						grestore					} if				} ifelse			} ifelse		}		{			dup 1 eq			{				pop pop				image			}			{				pop pop				Adobe_ColorImage_AI6_Vars begin					sourcecount -1 0					{									exch sourcearray 3 1 roll put					} for					/SeparateCMYKImageProc load			 end				systemdict /image get exec			} ifelse		} ifelse	} ifelse} def/XG{	pop pop} def/XF{	13 {pop} repeat} def/Xh{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIMask exch 0 ne def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				XIMask		{			/_lp /null ddef			_fc			/_lp /imagemask ddef		}		if		/XIVersion 7 def end} def/XH{	Adobe_ColorImage_AI6_Vars begin		/XIVersion 6 def		grestore end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIMask exch 0 ne def		/XIBinary exch 0 ne def		pop		pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq		{			XIImageWidth 8 div ceiling cvi		}		{			XIImageWidth XIChannelCount mul		} ifelse		/XIBuffer exch string def		XIBinary		{			/XIDataProc { currentfile XIBuffer readstring pop } def			XIVersion 6 le			{				currentfile 128 string readline pop pop			}			if		}		{			/XIDataProc { currentfile XIBuffer readhexstring pop } def		} ifelse				XIVersion 6 le		{			0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale			XIMask			{				/_lp /null ddef				_fc				/_lp /imagemask ddef			} if		} if				XIMask		{			XIImageWidth XIImageHeight			false			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]			/XIDataProc load			imagemask		}		{			XIImageWidth XIImageHeight			XIBitsPerPixel			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]			/XIDataProc load						XIChannelCount 1 eq			{				gsave				0 setgray				image				grestore			}			{				false				XIChannelCount				colorimage			} ifelse		} ifelse		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)%%Version: 1.2 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 107 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XA{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/_rgbtocmyk{3	{	1 exch sub 3 1 roll	} repeat3 copy 1 4 1 roll3	{	3 index 2 copy gt		{		exch		} if	pop 4 1 roll	} repeatpop pop pop4 1 roll3	{	3 index sub	3 1 roll	} repeat4 -1 roll} def/Xx{	exch	/_gf exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%/showpage{}def/copypage{}def[1 0 0 -1 38 neg 548] concat%%EndProlog%%BeginSetupAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI3_BeginRidercurrentpacking true setpacking/Swiss721BT-Light15 dict dup begin/FontName /Swiss721BT-Light def/FontType 3 def/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def/FontAscent 986 def/FontDescent -241 def/FontScript 0 def/FontBBox [ 0 -512 1024 1024 ] def/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def/l /lineto load def/m /moveto load def/c /curveto load def/BuildChar {	/_bitlobyte exch def	/_bitfont exch def	/_bithibyte 0 def	_bitlobyte 16 4 string cvrs dup length (K) dup length	dup 4 -1 roll add string /_bitkey exch def	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval	_bitfont /CharMetrics get _bitkey cvn get 0 setcharwidth	_bitfont /CharStrings get _bitkey cvn get exec} bind def14 dict dup begin/KD {} bind def/K20 {} bind def/K61 {{newpath412 205 m412 155 395 115 362 86 c328 57 283 42 226 42 c189 42 160 51 138 69 c117 87 106 111 106 142 c106 168 116 191 136 210 c156 229 185 244 224 254 c282 257 323 260 349 264 c374 268 396 273 412 279 c412 205 lclosepath416 69 m416 45 422 27 435 14 c447 2 466 -4 491 -4 c497 -4 504 -4 511 -3 c519 -2 526 -1 534 0 c534 47 l530 47 527 46 524 46 c520 46 516 46 512 46 c497 46 487 49 482 54 c477 59 474 73 474 95 c474 384 l474 436 457 476 424 503 c391 530 343 544 279 544 c215 544 164 529 127 498 c89 467 69 426 68 373 c128 372 l130 411 144 441 169 460 c195 480 232 490 280 490 c327 490 361 481 382 463 c403 446 413 416 413 375 c413 342 387 320 336 310 c329 308 323 307 319 306 c311 305 300 305 286 304 c211 298 158 288 126 274 c99 261 78 243 64 220 c49 198 42 171 42 141 c42 95 58 58 90 30 c122 2 165 -12 219 -12 c256 -12 292 -5 325 10 c357 25 388 48 416 78 c416 69 lclosepath} execfill} bind def/K64 {{newpath156 434 m187 473 232 492 289 492 c346 492 391 472 422 433 c453 394 469 338 469 266 c469 193 453 137 422 98 c391 59 347 40 289 40 c233 40 189 60 157 99 c126 139 110 194 110 266 c110 339 125 395 156 434 cclosepath464 736 m464 441 l445 476 420 502 389 520 c358 537 322 546 281 546 c208 546 150 521 108 471 c65 420 44 352 44 266 c44 179 65 111 107 61 c148 11 205 -14 277 -14 c318 -14 355 -5 386 12 c418 30 444 56 464 90 c464 0 l526 0 l526 736 l464 736 lclosepath} execfill} bind def/K65 {{newpath502 254 m502 275 l502 360 482 427 442 475 c402 522 347 546 276 546 c202 546 145 521 104 471 c63 422 42 353 42 264 c42 177 62 109 103 60 c144 11 201 -14 273 -14 c334 -14 384 2 424 35 c464 67 488 110 494 164 c433 164 l427 125 410 94 382 72 c354 49 319 38 277 38 c224 38 182 57 151 96 c120 134 104 186 104 251 c104 254 l502 254 lclosepath155 441 m186 475 225 492 274 492 c322 492 361 475 390 442 c419 408 435 362 438 304 c105 304 l108 361 125 407 155 441 cclosepath} execfill} bind def/K66 {{newpath160 0 m160 482 l256 482 l256 532 l160 532 l160 623 l160 647 164 664 174 674 c183 683 199 688 222 688 c227 688 236 688 250 687 c252 686 254 686 256 686 c256 741 l250 742 244 743 239 743 c234 744 229 744 224 744 c180 744 148 735 128 717 c108 698 98 669 98 629 c98 532 l20 532 l20 482 l98 482 l98 0 l160 0 lclosepath} execfill} bind def/K69 {{newpath138 644 m138 736 l76 736 l76 644 l138 644 lclosepath138 0 m138 532 l76 532 l76 0 l138 0 lclosepath} execfill} bind def/K6C {{newpath138 0 m138 736 l76 736 l76 0 l138 0 lclosepath} execfill} bind def/K6E {{newpath130 0 m130 314 l130 368 144 411 173 443 c202 474 242 490 292 490 c340 490 374 479 393 457 c412 435 422 392 422 330 c422 0 l486 0 l486 324 l486 339 l486 379 484 408 481 426 c478 443 472 458 464 471 c450 495 428 513 401 526 c373 539 341 546 304 546 c265 546 231 538 201 521 c172 505 147 480 127 447 c127 532 l68 532 l68 0 l130 0 lclosepath} execfill} bind def/K6F {{newpath153 433 m185 472 229 492 286 492 c343 492 388 472 419 433 c450 393 466 337 466 265 c466 192 450 136 419 97 c388 58 343 38 286 38 c229 38 185 58 153 97 c122 137 106 193 106 265 c106 337 122 393 153 433 cclosepath106 59 m148 10 208 -14 285 -14 c363 -14 423 10 466 59 c509 108 530 177 530 265 c530 354 509 424 466 473 c423 522 363 546 285 546 c208 546 148 522 106 473 c63 424 42 354 42 265 c42 176 63 108 106 59 cclosepath} execfill} bind def/K72 {{newpath132 0 m132 294 l132 356 145 403 172 435 c198 466 237 482 290 482 c298 482 l298 546 l291 546 l252 546 218 537 191 520 c164 502 143 475 128 440 c128 532 l68 532 l68 0 l132 0 lclosepath} execfill} bind def/K73 {{newpath105 35 m142 2 192 -14 253 -14 c314 -14 363 0 400 28 c437 57 456 93 456 138 c456 179 444 210 421 232 c397 255 355 273 294 288 c288 290 278 292 266 295 c169 318 120 353 120 400 c120 428 131 450 153 467 c174 484 203 492 240 492 c282 492 315 482 339 461 c364 441 377 412 380 376 c442 376 l438 429 419 471 384 501 c348 531 301 546 241 546 c187 546 143 532 109 503 c75 475 58 437 58 392 c58 352 71 322 97 299 c123 277 174 257 250 239 c250 239 251 239 252 238 c347 216 394 183 394 140 c394 110 381 86 355 68 c330 51 294 42 250 42 c208 42 175 53 148 76 c122 99 108 129 106 166 c46 166 l48 111 67 68 105 35 cclosepath} execfill} bind def/K74 {{newpath89 684 m89 532 l16 532 l16 482 l89 482 l89 91 l89 52 95 24 108 9 c120 -6 142 -14 173 -14 c184 -14 195 -13 208 -12 c220 -10 234 -7 249 -4 c248 44 l231 41 219 39 211 38 c203 37 196 36 189 36 c175 36 165 40 159 47 c153 54 151 69 151 91 c151 482 l249 482 l249 532 l151 532 l151 684 l89 684 lclosepath} execfill} bind def/K77 {{newpath232 0 m354 443 l476 0 l540 0 l708 530 l645 530 l509 87 l390 530 l322 530 l200 87 l63 530 l0 530 l168 0 l232 0 lclosepath} execfill} bind defend /CharStrings exch def14 dict dup begin/KD 273 def/K20 273 def/K61 549 def/K64 595 def/K65 543 def/K66 273 def/K69 211 def/K6C 211 def/K6E 552 def/K6F 572 def/K72 315 def/K73 503 def/K74 278 def/K77 709 defend /CharMetrics exch defend/Swiss721BT-Light havefont not {definefont pop}{pop pop} ifelsesetpacking%AI3_EndRider[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI55J_Tsume: None%AI3_BeginEncoding: _Swiss721BT-Light Swiss721BT-Light[/_Swiss721BT-Light/Swiss721BT-Light 0 0 0 TZ%AI3_EndEncoding TrueType[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal181/mu/partialdiff/summation/product/pi/integral 189/Omega 195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple/_Symbol_/Symbol 0 0 0 TZ/_AI3_savepage save def%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 13 153 51 0 Lb(Pixelated comet \(greyscale\)) Ln0 A0 O0 g800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR%AI5_File:%AI5_BeginRaster() 1 XG[ 8.9997 0 0 8.9997 254.1297 539 ] 34 7 0 Xh[ 8.9997 0 0 8.9997 254.1297 539 ] 0 0 34 7 34 7 8 4 0 0 1 0%%BeginData: 955XI                                          * 6Y]~~~~aY A 3 $                                                                         3Vmmtz~~~
   Ä¤
d A $                                                  6gmgO 3 %                 $ % 6Yz Ä Ë  ] 3                                     	6gmV *                                                  	6
d ¸ Ë ¸

d 6                     %ag A $                                                                     3Y¤ Ë Ä

d 3      Am A                                                                                      %Ot ¸ Ä]]O $                                                                                                      3Vm~%%EndDataXH%AI5_EndRasterNLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 9 255 102 0 Lb(Pixelated Comet \(CMYK\)) Ln0 A0 O0 g800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR%AI5_File:%AI5_BeginRaster() 1 XG[ 8.9997 0 0 8.9997 254.1297 539 ] 34 7 0 Xh[ 8.9997 0 0 8.9997 254.1297 539 ] 0 0 34 7 34 7 8 4 0 0 1 0%%BeginData: 955XI                                        	 ) 8 U ] , , , , m U A .                                                                         . Q   % ) , , , / :¡ H¬ Z» L± =¥ / u A	"                                                	 8 x  x J . 	&                 	& 8 U ) =¥ Z» ]¾ H¬ / ] .                                     2 x  Q )                                                	 2 u 3 W¸ ]¾ W¸ :¡ u 8                     	& m x A                                                                     . U / L± ]¾ Z» :¡ u .    	 A  A	                                                                                     	& J % =¥ W¸ Z» 7 ] ] J                                                                                                    	 . Q # , /%%EndDataXH%AI5_EndRasterNLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 2 79 255 79 Lb(Black) Ln0 A*u0 O0 0 0 1 k800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:1 D0 XR577.0198 305.3197 m571.3875 384.8305 L571.1368 387.4643 570.7081 390.0853 570.0414 392.6771 c561.2897 426.7042 519.1979 443.1015 476.0284 429.3009 c432.8591 415.5003 404.957 376.7269 413.7087 342.6998 c422.4603 308.6727 464.5521 292.2755 507.7214 306.0761 c526.19 311.9802 541.8491 322.4627 553.0544 335.1811 C555.0737 303.6428 L577.0198 305.3197 Lf0 D503.355 323.0535 m472.0773 313.0545 441.7048 324.4514 435.5173 348.5086 c429.3298 372.5658 449.6703 400.1746 480.9479 410.1737 c512.2256 420.1727 542.5981 408.776 548.7856 384.7188 c554.973 360.6615 534.6327 333.0526 503.355 323.0535 cf*U305.1962 436.0488 m284.8032 432.5532 266.853 423.45 253.722 411.2771 C253.722 429.663 L231.1221 429.663 L231.1221 365.5137 L231.1219 365.4995 231.1223 365.4853 231.1221 365.4711 C231.1221 304.5022 L253.722 304.5022 L253.722 367.9581 L255.2161 390.3937 277.7904 411.3473 307.4053 416.4238 c321.5116 418.8419 334.8798 417.2565 345.7057 412.657 C352.7531 432.5986 L338.8324 437.5165 322.4112 438.9998 305.1962 436.0488 cf374.125 427.4385 m374.125 304.4206 L396.125 304.4206 L396.125 429.5814 l394 429.5814 l383.6667 424.7718 374.125 427.4385 Vf*u1 D381.8251 459.2959 m374.9181 457.0878 370.4538 450.8841 371.854 445.4399 c373.2543 439.9956 379.9889 437.372 386.8959 439.5801 c393.8029 441.7882 398.2672 447.9918 396.867 453.4361 c395.4667 458.8804 388.7321 461.5039 381.8251 459.2959 cf*U*u212.1564 305.1322 m206.5241 384.643 L206.2734 387.2768 205.8447 389.8978 205.1781 392.4896 c196.4264 426.5167 154.3346 442.914 111.1651 429.1134 c67.9957 415.3128 40.0936 376.5394 48.8453 342.5123 c57.5969 308.4852 99.6887 292.088 142.8581 305.8886 c161.3266 311.7927 176.9857 322.2752 188.191 334.9936 C190.2103 303.4553 L212.1564 305.1322 Lf0 D138.4916 322.866 m107.2139 312.867 76.8414 324.2639 70.654 348.3211 c64.4665 372.3783 84.8069 399.9871 116.0846 409.9862 c147.3623 419.9852 177.7347 408.5885 183.9222 384.5313 c190.1096 360.474 169.7693 332.8651 138.4916 322.866 cf*ULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 -1 104 118 231 Lb(Comet/Lettering Lilac) Ln0 A0 O0.35 0.45 0.15 0 k800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR357.4389 477.6725 m359.9638 476.0272 361.5785 472.0104 356.5009 471.4543 C302.5796 471.9925 262.7219 510.8163 210.7483 516.6483 c150.2158 527.0701 98.9518 497.4455 50.6715 471.5855 C91.9857 501.6209 138.0117 526.4129 193.1087 529.4387 c254.9076 531.5477 307.3098 507.688 357.4389 477.6725 Cf*u70.7682 260.1406 m70.7682 257.7774 69.9821 255.9121 68.4098 254.543 c66.8375 253.1738 64.7301 252.4893 62.0865 252.4893 c60.3502 252.4893 58.9772 252.9112 57.9684 253.7549 c56.9596 254.5987 56.4557 255.7315 56.4557 257.1533 c56.4557 258.4033 56.9225 259.4737 57.8561 260.3643 c58.7897 261.2549 60.1754 261.9424 62.0133 262.4268 c64.6803 262.5674 66.6139 262.7237 67.8141 262.8955 c69.0143 263.0674 69.9987 263.294 70.7682 263.5752 C70.7682 260.1406 lf70.9528 253.7735 m70.9528 252.6446 71.2457 251.794 71.8336 251.2217 c72.4215 250.6494 73.3024 250.3643 74.4772 250.3643 c74.7711 250.3643 75.0963 250.3799 75.4518 250.4112 c75.8072 250.4424 76.1627 250.4893 76.5182 250.5518 C76.5182 252.7237 l76.3473 252.708 76.1842 252.6963 76.0299 252.6885 c75.8746 252.6807 75.6891 252.6768 75.4723 252.6768 c74.7906 252.6768 74.3258 252.8008 74.0778 253.0498 c73.8297 253.2979 73.7057 253.9356 73.7057 254.9629 C73.7057 268.5371 l73.7057 270.9951 72.9322 272.8623 71.3863 274.1377 c69.8395 275.4131 67.5748 276.0518 64.5924 276.0518 c61.5934 276.0518 59.2115 275.3311 57.4469 273.8916 c55.6813 272.4522 54.7682 270.4942 54.7057 268.0196 C57.5182 267.9951 l57.6119 269.8311 58.2555 271.2168 59.4479 272.1504 c60.6393 273.084 62.3571 273.5518 64.6012 273.5518 c66.8131 273.5518 68.402 273.1319 69.3668 272.292 c70.3317 271.4522 70.8141 270.0586 70.8141 268.1133 c70.8141 266.543 69.6217 265.5156 67.2379 265.0293 c66.8922 264.9658 66.6178 264.9112 66.4147 264.8643 c66.069 264.833 65.5592 264.794 64.8854 264.7471 c61.4029 264.4815 58.9176 264.0127 57.4274 263.3408 c56.1344 262.7334 55.149 261.8994 54.4713 260.8399 c53.7936 259.7803 53.4557 258.542 53.4557 257.125 c53.4557 254.9434 54.2028 253.1983 55.6979 251.8897 c57.193 250.5811 59.2008 249.9268 61.7223 249.9268 c63.4918 249.9268 65.1432 250.2783 66.6783 250.9815 c68.2125 251.6846 69.6373 252.7471 70.9528 254.1699 C70.9528 253.7735 lf*U*u82.3939 250.5518 m82.3939 275.4893 L85.2045 275.4893 L85.2045 271.1426 L85.9213 272.8067 86.9164 274.0518 88.1879 274.877 c89.4593 275.7012 91.0228 276.1143 92.8793 276.1143 c93.2064 276.1143 L93.2064 273.1143 L92.8324 273.1143 L90.3529 273.1143 88.4935 272.3779 87.2533 270.9072 c86.0131 269.4356 85.3939 267.2363 85.3939 264.3096 c85.3939 250.5518 l82.3939 250.5518 Lf*U*u99.465 280.7393 m99.465 285.0518 L102.34 285.0518 L102.34 280.7393 l99.465 280.7393 Lf99.465 250.5518 m99.465 275.4893 L102.34 275.4893 L102.34 250.5518 l99.465 250.5518 Lf*U*u127.1844 260.1406 m127.1844 257.7774 126.3983 255.9121 124.826 254.543 c123.2538 253.1738 121.1464 252.4893 118.5028 252.4893 c116.7665 252.4893 115.3934 252.9112 114.3846 253.7549 c113.3759 254.5987 112.8719 255.7315 112.8719 257.1533 c112.8719 258.4033 113.3387 259.4737 114.2723 260.3643 c115.2059 261.2549 116.5917 261.9424 118.4296 262.4268 c121.0966 262.5674 123.0301 262.7237 124.2303 262.8955 c125.4305 263.0674 126.4149 263.294 127.1844 263.5752 C127.1844 260.1406 lf127.369 253.7735 m127.369 252.6446 127.662 251.794 128.2499 251.2217 c128.8378 250.6494 129.7186 250.3643 130.8934 250.3643 c131.1874 250.3643 131.5126 250.3799 131.868 250.4112 c132.2235 250.4424 132.579 250.4893 132.9344 250.5518 C132.9344 252.7237 l132.7635 252.708 132.6005 252.6963 132.4462 252.6885 c132.2909 252.6807 132.1053 252.6768 131.8885 252.6768 c131.2069 252.6768 130.7421 252.8008 130.494 253.0498 c130.246 253.2979 130.1219 253.9356 130.1219 254.9629 C130.1219 268.5371 l130.1219 270.9951 129.3485 272.8623 127.8026 274.1377 c126.2557 275.4131 123.9911 276.0518 121.0087 276.0518 c118.0096 276.0518 115.6278 275.3311 113.8632 273.8916 c112.0975 272.4522 111.1844 270.4942 111.1219 268.0196 C113.9344 267.9951 l114.0282 269.8311 114.6717 271.2168 115.8641 272.1504 c117.0555 273.084 118.7733 273.5518 121.0175 273.5518 c123.2294 273.5518 124.8182 273.1319 125.7831 272.292 c126.7479 271.4522 127.2303 270.0586 127.2303 268.1133 c127.2303 266.543 126.038 265.5156 123.6542 265.0293 c123.3085 264.9658 123.0341 264.9112 122.8309 264.8643 c122.4852 264.833 121.9755 264.794 121.3016 264.7471 c117.8192 264.4815 115.3339 264.0127 113.8436 263.3408 c112.5507 262.7334 111.5653 261.8994 110.8876 260.8399 c110.2098 259.7803 109.8719 258.542 109.8719 257.125 c109.8719 254.9434 110.619 253.1983 112.1141 251.8897 c113.6092 250.5811 115.6171 249.9268 118.1385 249.9268 c119.9081 249.9268 121.5594 250.2783 123.0946 250.9815 c124.6288 251.6846 126.0536 252.7471 127.369 254.1699 C127.369 253.7735 lf*U*u152.5375 258.3018 m155.4125 258.3018 L155.4906 256.5752 156.1449 255.1748 157.3773 254.1006 c158.6088 253.0264 160.1898 252.4893 162.1195 252.4893 c164.2054 252.4893 165.849 252.9004 167.0492 253.7227 c168.2494 254.5449 168.85 255.6621 168.85 257.0723 c168.85 259.0938 166.6312 260.6367 162.1937 261.7031 c162.1312 261.7188 162.0922 261.7266 162.0765 261.7266 c158.514 262.5869 156.1273 263.5332 154.9164 264.5664 c153.7054 265.5987 153.1 267.0381 153.1 268.8848 c153.1 271.0283 153.8929 272.7696 155.4789 274.1074 c157.0648 275.4453 159.1312 276.1143 161.6781 276.1143 c164.475 276.1143 166.7015 275.4131 168.3578 274.0127 c170.014 272.6113 170.9281 270.666 171.1 268.1768 c168.1625 268.1768 L168.0375 269.8662 167.4047 271.1846 166.266 272.1319 c165.1273 273.0781 163.5824 273.5518 161.6322 273.5518 c159.931 273.5518 158.5726 273.1602 157.559 272.3779 c156.5443 271.5957 156.0375 270.5635 156.0375 269.2813 c156.0375 267.0596 158.3002 265.417 162.8256 264.3535 c163.4183 264.2129 163.8627 264.1113 164.1595 264.0488 c167.016 263.3457 169.0013 262.4697 170.1156 261.4229 c171.2299 260.376 171.7875 258.9063 171.7875 257.0156 c171.7875 254.9043 170.9134 253.1846 169.1664 251.8565 c167.4193 250.5293 165.1195 249.8643 162.2679 249.8643 c159.3695 249.8643 157.0424 250.6299 155.2875 252.1612 c153.5316 253.6924 152.6156 255.7393 152.5375 258.3018 cf*U*u183.2189 270.7852 m184.6935 272.6289 186.7648 273.5518 189.4327 273.5518 c192.132 273.5518 194.215 272.6328 195.6818 270.7969 c197.1486 268.96 197.882 266.3535 197.882 262.9776 c197.882 259.6006 197.1486 256.9981 195.6818 255.1699 c194.215 253.3408 192.132 252.4268 189.4327 252.4268 c186.7648 252.4268 184.6935 253.3487 183.2189 255.1934 c181.7443 257.0371 181.007 259.6319 181.007 262.9776 c181.007 266.3379 181.7443 268.9404 183.2189 270.7852 cf180.9923 253.3379 m182.9825 251.0635 185.7882 249.9268 189.4093 249.9268 c193.0616 249.9268 195.8868 251.0674 197.8849 253.3496 c199.8829 255.6309 200.882 258.8428 200.882 262.9854 c200.882 267.1582 199.879 270.3897 197.8732 272.6797 c195.8673 274.9688 193.046 276.1143 189.4093 276.1143 c185.7882 276.1143 182.9825 274.9688 180.9923 272.6797 c179.0021 270.3897 178.007 267.1582 178.007 262.9854 c178.007 258.8272 179.0021 255.6113 180.9923 253.3379 cf*U*u209.412 250.5518 m209.412 273.1143 L205.7499 273.1143 L205.7499 275.4893 L209.412 275.4893 L209.412 280.0508 L209.412 281.9199 209.8798 283.2832 210.8163 284.1406 c211.7528 284.9981 213.2518 285.4268 215.3124 285.4268 c215.5301 285.4268 215.7596 285.4151 216.0018 285.3916 c216.244 285.3682 216.5057 285.3252 216.787 285.2637 c216.787 282.708 L216.7245 282.708 216.6307 282.7158 216.5067 282.7315 c215.8846 282.7783 215.4491 282.8018 215.201 282.8018 c214.1288 282.8018 213.3749 282.5781 212.9393 282.1319 c212.5038 281.6846 212.287 280.8975 212.287 279.7686 c212.287 275.4893 L216.787 275.4893 L216.787 273.1143 L212.287 273.1143 L212.287 250.5518 l209.412 250.5518 Lf*U*u226.6256 282.6143 m226.6256 275.4893 L231.2506 275.4893 L231.2506 273.1143 L226.6256 273.1143 L226.6256 254.8877 L226.6256 253.8408 226.7584 253.1475 227.024 252.8096 c227.2897 252.4707 227.7672 252.3018 228.4567 252.3018 c228.7535 252.3018 229.0904 252.3252 229.4664 252.374 c229.8414 252.4229 230.4283 252.5235 231.2272 252.6768 c231.2506 250.4268 L230.5475 250.2529 229.9069 250.127 229.3287 250.0459 c228.7506 249.9668 228.2037 249.9268 227.6881 249.9268 c226.2506 249.9268 225.235 250.2852 224.6412 250.999 c224.0475 251.7139 223.7506 253.0108 223.7506 254.8877 c223.7506 273.1143 L220.3522 273.1143 L220.3522 275.4893 L223.7506 275.4893 L223.7506 282.6143 l226.6256 282.6143 Lf*U*u242.5013 250.5518 m234.6263 275.4268 L237.5736 275.4268 L244.0131 254.6231 L249.7513 275.4268 L252.9388 275.4268 L258.5287 254.6231 L264.89 275.4268 L267.8138 275.4268 L260.0013 250.5518 L256.9388 250.5518 L251.2406 271.3555 L245.5013 250.5518 l242.5013 250.5518 Lf*U*u289.1661 260.1406 m289.1661 257.7774 288.38 255.9121 286.8077 254.543 c285.2355 253.1738 283.128 252.4893 280.4845 252.4893 c278.7482 252.4893 277.3751 252.9112 276.3663 253.7549 c275.3575 254.5987 274.8536 255.7315 274.8536 257.1533 c274.8536 258.4033 275.3204 259.4737 276.254 260.3643 c277.1876 261.2549 278.5734 261.9424 280.4113 262.4268 c283.0782 262.5674 285.0118 262.7237 286.212 262.8955 c287.4122 263.0674 288.3966 263.294 289.1661 263.5752 C289.1661 260.1406 lf289.3507 253.7735 m289.3507 252.6446 289.6437 251.794 290.2316 251.2217 c290.8195 250.6494 291.7003 250.3643 292.8751 250.3643 c293.1691 250.3643 293.4943 250.3799 293.8497 250.4112 c294.2052 250.4424 294.5607 250.4893 294.9161 250.5518 C294.9161 252.7237 l294.7452 252.708 294.5821 252.6963 294.4279 252.6885 c294.2726 252.6807 294.087 252.6768 293.8702 252.6768 c293.1886 252.6768 292.7238 252.8008 292.4757 253.0498 c292.2277 253.2979 292.1036 253.9356 292.1036 254.9629 C292.1036 268.5371 l292.1036 270.9951 291.3302 272.8623 289.7843 274.1377 c288.2374 275.4131 285.9728 276.0518 282.9904 276.0518 c279.9913 276.0518 277.6095 275.3311 275.8448 273.8916 c274.0792 272.4522 273.1661 270.4942 273.1036 268.0196 C275.9161 267.9951 l276.0099 269.8311 276.6534 271.2168 277.8458 272.1504 c279.0372 273.084 280.755 273.5518 282.9991 273.5518 c285.2111 273.5518 286.7999 273.1319 287.7648 272.292 c288.7296 271.4522 289.212 270.0586 289.212 268.1133 c289.212 266.543 288.0196 265.5156 285.6359 265.0293 c285.2902 264.9658 285.0157 264.9112 284.8126 264.8643 c284.4669 264.833 283.9571 264.794 283.2833 264.7471 c279.8009 264.4815 277.3155 264.0127 275.8253 263.3408 c274.5323 262.7334 273.547 261.8994 272.8693 260.8399 c272.1915 259.7803 271.8536 258.542 271.8536 257.125 c271.8536 254.9434 272.6007 253.1983 274.0958 251.8897 c275.5909 250.5811 277.5988 249.9268 280.1202 249.9268 c281.8898 249.9268 283.5411 250.2783 285.0763 250.9815 c286.6105 251.6846 288.0353 252.7471 289.3507 254.1699 C289.3507 253.7735 lf*U*u300.7919 250.5518 m300.7919 275.4893 L303.6024 275.4893 L303.6024 271.1426 L304.3192 272.8067 305.3143 274.0518 306.5858 274.877 c307.8573 275.7012 309.4208 276.1143 311.2772 276.1143 c311.6044 276.1143 L311.6044 273.1143 L311.2303 273.1143 L308.7509 273.1143 306.8915 272.3779 305.6512 270.9072 c304.411 269.4356 303.7919 267.2363 303.7919 264.3096 c303.7919 250.5518 l300.7919 250.5518 Lf*U*u321.6979 271.2237 m323.1246 272.8174 324.9762 273.6143 327.2535 273.6143 c329.5143 273.6143 331.3268 272.8291 332.691 271.2588 c334.0553 269.6885 334.8004 267.5283 334.9254 264.7783 C319.3473 264.8018 l319.4879 267.4893 320.2711 269.6299 321.6979 271.2237 cf337.9254 262.4893 m337.9254 263.4473 l337.9254 267.4434 336.9918 270.5528 335.1246 272.7774 c333.2574 275.002 330.652 276.1143 327.3082 276.1143 c323.8707 276.1143 321.1871 274.9492 319.2574 272.6192 c317.3278 270.2891 316.3629 267.044 316.3629 262.8838 c316.3629 258.8018 317.3229 255.6113 319.2447 253.3125 c321.1666 251.0137 323.8219 249.8643 327.2125 249.8643 c330.0563 249.8643 332.4147 250.626 334.2897 252.1514 c336.1647 253.6758 337.2584 255.7051 337.5709 258.2393 C334.6686 258.2393 l334.3873 256.4014 333.5924 254.9522 332.2828 253.8916 c330.9723 252.8311 329.3434 252.3018 327.3942 252.3018 c324.9293 252.3018 322.9645 253.209 321.4987 255.0254 c320.0328 256.8408 319.3004 259.2813 319.3004 262.3477 C319.3004 262.4893 L337.9254 262.4893 lf*U*u360.0988 280.7393 m360.0988 285.0518 L362.9738 285.0518 L362.9738 280.7393 l360.0988 280.7393 Lf360.0988 250.5518 m360.0988 275.4893 L362.9738 275.4893 L362.9738 250.5518 l360.0988 250.5518 Lf*U*u371.6932 250.5518 m371.6932 275.4893 L374.5038 275.4893 L374.5038 271.1426 L375.2206 272.8067 376.2157 274.0518 377.4872 274.877 c378.7587 275.7012 380.3221 276.1143 382.1786 276.1143 c382.5057 276.1143 L382.5057 273.1143 L382.1317 273.1143 L379.6522 273.1143 377.7928 272.3779 376.5526 270.9072 c375.3124 269.4356 374.6932 267.2363 374.6932 264.3096 c374.6932 250.5518 l371.6932 250.5518 Lf*U*u392.5992 271.2237 m394.026 272.8174 395.8776 273.6143 398.1549 273.6143 c400.4156 273.6143 402.2281 272.8291 403.5924 271.2588 c404.9567 269.6885 405.7018 267.5283 405.8268 264.7783 C390.2487 264.8018 l390.3893 267.4893 391.1725 269.6299 392.5992 271.2237 cf408.8268 262.4893 m408.8268 263.4473 l408.8268 267.4434 407.8932 270.5528 406.026 272.7774 c404.1588 275.002 401.5533 276.1143 398.2096 276.1143 c394.7721 276.1143 392.0885 274.9492 390.1588 272.6192 c388.2291 270.2891 387.2643 267.044 387.2643 262.8838 c387.2643 258.8018 388.2242 255.6113 390.1461 253.3125 c392.068 251.0137 394.7233 249.8643 398.1139 249.8643 c400.9576 249.8643 403.316 250.626 405.191 252.1514 c407.066 253.6758 408.1598 255.7051 408.4723 258.2393 C405.5699 258.2393 l405.2887 256.4014 404.4938 254.9522 403.1842 253.8916 c401.8737 252.8311 400.2447 252.3018 398.2955 252.3018 c395.8307 252.3018 393.8658 253.209 392.4 255.0254 c390.9342 256.8408 390.2018 259.2813 390.2018 262.3477 C390.2018 262.4893 L408.8268 262.4893 lf*U*u416.2103 250.5518 m416.2103 285.0518 L419.0853 285.0518 L419.0853 250.5518 l416.2103 250.5518 Lf*U*u443.9298 260.1406 m443.9298 257.7774 443.1437 255.9121 441.5714 254.543 c439.9991 253.1738 437.8917 252.4893 435.2482 252.4893 c433.5118 252.4893 432.1388 252.9112 431.13 253.7549 c430.1212 254.5987 429.6173 255.7315 429.6173 257.1533 c429.6173 258.4033 430.0841 259.4737 431.0177 260.3643 c431.9513 261.2549 433.337 261.9424 435.1749 262.4268 c437.8419 262.5674 439.7755 262.7237 440.9757 262.8955 c442.1759 263.0674 443.1603 263.294 443.9298 263.5752 C443.9298 260.1406 lf444.1144 253.7735 m444.1144 252.6446 444.4073 251.794 444.9952 251.2217 c445.5831 250.6494 446.464 250.3643 447.6388 250.3643 c447.9327 250.3643 448.2579 250.3799 448.6134 250.4112 c448.9689 250.4424 449.3243 250.4893 449.6798 250.5518 C449.6798 252.7237 l449.5089 252.708 449.3458 252.6963 449.1915 252.6885 c449.0363 252.6807 448.8507 252.6768 448.6339 252.6768 c447.9523 252.6768 447.4874 252.8008 447.2394 253.0498 c446.9913 253.2979 446.8673 253.9356 446.8673 254.9629 C446.8673 268.5371 l446.8673 270.9951 446.0939 272.8623 444.548 274.1377 c443.0011 275.4131 440.7364 276.0518 437.754 276.0518 c434.755 276.0518 432.3732 275.3311 430.6085 273.8916 c428.8429 272.4522 427.9298 270.4942 427.8673 268.0196 C430.6798 267.9951 l430.7736 269.8311 431.4171 271.2168 432.6095 272.1504 c433.8009 273.084 435.5187 273.5518 437.7628 273.5518 c439.9747 273.5518 441.5636 273.1319 442.5284 272.292 c443.4933 271.4522 443.9757 270.0586 443.9757 268.1133 c443.9757 266.543 442.7833 265.5156 440.3995 265.0293 c440.0538 264.9658 439.7794 264.9112 439.5763 264.8643 c439.2306 264.833 438.7208 264.794 438.047 264.7471 c434.5646 264.4815 432.0792 264.0127 430.589 263.3408 c429.296 262.7334 428.3107 261.8994 427.6329 260.8399 c426.9552 259.7803 426.6173 258.542 426.6173 257.125 c426.6173 254.9434 427.3644 253.1983 428.8595 251.8897 c430.3546 250.5811 432.3624 249.9268 434.8839 249.9268 c436.6534 249.9268 438.3048 250.2783 439.84 250.9815 c441.3741 251.6846 442.7989 252.7471 444.1144 254.1699 C444.1144 253.7735 lf*U*u455.5555 250.5518 m455.5555 275.4893 L458.3524 275.4893 L458.3524 271.4746 L459.2899 273.0127 460.4471 274.1709 461.8231 274.9483 c463.1981 275.7256 464.7928 276.1143 466.6063 276.1143 c468.3251 276.1143 469.8339 275.8086 471.1317 275.1983 c472.4286 274.5869 473.4217 273.7178 474.1102 272.5908 c474.4696 272.0108 474.7274 271.3106 474.8837 270.4883 c475.0399 269.666 475.118 268.3154 475.118 266.4365 c475.118 265.71 L475.118 250.5518 L472.118 250.5518 L472.118 265.9922 L472.118 268.9121 471.6688 270.8916 470.7714 271.9307 c469.8739 272.9697 468.2938 273.4893 466.0311 273.4893 c463.705 273.4893 461.8671 272.751 460.5175 271.2754 c459.1678 269.7988 458.493 267.7881 458.493 265.2422 c458.493 250.5518 l455.5555 250.5518 Lf*U*u487.5026 270.8115 m488.9557 272.6377 491.027 273.5518 493.7154 273.5518 c496.4196 273.5518 498.5065 272.6299 499.9762 270.7881 c501.4449 268.9463 502.1803 266.3321 502.1803 262.9463 c502.1803 259.544 501.4488 256.9297 499.9879 255.1035 c498.526 253.2774 496.4352 252.3643 493.7154 252.3643 c491.0738 252.3643 489.0143 253.2891 487.5377 255.1387 c486.0602 256.9883 485.3219 259.5908 485.3219 262.9463 c485.3219 266.3633 486.0485 268.9854 487.5026 270.8115 cf501.9469 285.0518 m501.9469 271.1533 l501.0563 272.7988 499.8883 274.0371 498.443 274.8682 c496.9977 275.6983 495.2985 276.1143 493.3453 276.1143 c489.9391 276.1143 487.2399 274.9375 485.2477 272.584 c483.2555 270.2305 482.2594 267.0283 482.2594 262.9776 c482.2594 258.9268 483.236 255.7285 485.1891 253.3828 c487.1422 251.0371 489.7985 249.8643 493.1578 249.8643 c495.111 249.8643 496.8258 250.2705 498.3024 251.083 c499.7789 251.8955 500.9938 253.1065 501.9469 254.7158 C501.9469 250.5518 L504.8219 250.5518 L504.8219 285.0518 L501.9469 285.0518 lf*U*u528.4562 250.5518 m528.4562 285.0518 L531.3312 285.0518 L531.3312 250.5518 l528.4562 250.5518 Lf*U*u543.8866 282.6143 m543.8866 275.4893 L548.5116 275.4893 L548.5116 273.1143 L543.8866 273.1143 L543.8866 254.8877 L543.8866 253.8408 544.0194 253.1475 544.285 252.8096 c544.5507 252.4707 545.0282 252.3018 545.7176 252.3018 c546.0145 252.3018 546.3514 252.3252 546.7274 252.374 c547.1024 252.4229 547.6893 252.5235 548.4882 252.6768 c548.5116 250.4268 L547.8085 250.2529 547.1678 250.127 546.5897 250.0459 c546.0116 249.9668 545.4647 249.9268 544.9491 249.9268 c543.5116 249.9268 542.496 250.2852 541.9022 250.999 c541.3085 251.7139 541.0116 253.0108 541.0116 254.8877 c541.0116 273.1143 L537.6132 273.1143 L537.6132 275.4893 L541.0116 275.4893 L541.0116 282.6143 l543.8866 282.6143 Lf*U*u559.1305 270.8115 m560.5836 272.6377 562.6549 273.5518 565.3434 273.5518 c568.0475 273.5518 570.1344 272.6299 571.6041 270.7881 c573.0729 268.9463 573.8082 266.3321 573.8082 262.9463 c573.8082 259.544 573.0768 256.9297 571.6158 255.1035 c570.1539 253.2774 568.0631 252.3643 565.3434 252.3643 c562.7018 252.3643 560.6422 253.2891 559.1656 255.1387 c557.6881 256.9883 556.9498 259.5908 556.9498 262.9463 c556.9498 266.3633 557.6764 268.9854 559.1305 270.8115 cf1 D573.5748 285.0518 m573.5748 271.1533 l572.6842 272.7988 571.5162 274.0371 570.0709 274.8682 c568.6256 275.6983 566.9264 276.1143 564.9733 276.1143 c561.567 276.1143 558.8678 274.9375 556.8756 272.584 c554.8834 270.2305 553.8873 267.0283 553.8873 262.9776 c553.8873 258.9268 554.8639 255.7285 556.817 253.3828 c558.7701 251.0371 561.4264 249.8643 564.7858 249.8643 c566.7389 249.8643 568.4537 250.2705 569.9303 251.083 c571.4069 251.8955 572.6217 253.1065 573.5748 254.7158 C573.5748 250.5518 L576.4498 250.5518 L576.4498 285.0518 L573.5748 285.0518 lf*ULB%AI5_EndLayer--%%PageTrailer_AI3_savepage restoregsave annotatepage grestore%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_typography_AI5 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EndDocumentpseendpshowpage%%Trailerend%%EOF